{"version":3,"file":"commonHelpers.js","sources":["../src/js/favorites/createCardMarkup.js","../src/js/favorites/favorites.js"],"sourcesContent":["import icons from '../../img/icons.svg';\n\nconst trimText = (str, length) => {\n  if (length <= 3) throw new Error('Trim length must not be less than 4');\n  if (str.length <= length - 3) return str;\n  return str.slice(0, length - 3) + '...';\n};\n\nexport function createCardMarkup({\n  _id,\n  burnedCalories,\n  time,\n  bodyPart,\n  target,\n  name,\n}) {\n  return `    <li class=\"favorites__item js-common-card-item\" data-exercise-id=\"${_id}\">\n                <div class=\"favorites__card\" href=\"\">\n                  <div class=\"sport-card\">\n                    <div class=\"sport-card__header\">\n                      <div class=\"sport-card__tag-wrapper\">\n                        <p class=\"sport-card__tag\">WORKOUT</p>\n                        <!-- <svg class=\"\" width=\"\" height=\"\">\n                      <use href=\"\"></use>\n                    </svg> -->\n  \n                        <!-- Temporary icon -->\n                        <button\n                          class=\"button sport-card__remove-btn js-favorites-remove\"\n                          type=\"button\"\n                          aria-label=\"Remove card button\"\n                          data-card-id=\"${_id}\"\n                        >\n                        \n\n                             <svg class=\"icon\" width=\"16\" height=\"16\" >\n                              <use href=\"${icons}#icon-trash\"></use>\n                            </svg>\n                        </button>\n                      </div>\n  \n                      <button class=\"button sport-card__start-btn js-excercise-button\" type=\"button\" data-card-id=\"${_id}\">\n                        Start\n                     \n                          <svg class=\"icon\" width=\"16\" height=\"16\" >\n                              <use href=\"${icons}#icon-arrow\"></use>\n                            </svg>\n                        \n                      </button>\n                    </div>\n  \n                    <div class=\"sport-card__meta\">                     \n\n                      <svg class=\"icon\" width=\"24\" height=\"24\">\n                        <use href=\"${icons}#icon-runner\"></use>\n                      </svg>\n  \n                      <p class=\"sport-card__name\">${trimText(name, 20)}</p>\n                    </div>\n  \n                    <div class=\"sport-card__footer\">\n                      <ul class=\"sport-card__param-list\">\n                        <li class=\"sport-card__param-item\">\n                          Burned calories:<span class=\"sport-card__param__value\"\n                            >${burnedCalories} / ${trimText(\n    time.toString() + ' min',\n    4\n  )}</span\n                          >\n                        </li>\n                        <li class=\"sport-card__param-item\">\n                          Body part:<span class=\"sport-card__param__value\"\n                            >${trimText(bodyPart, 8)}</span\n                          >\n                        </li>\n                        <li class=\"sport-card__param-item\">\n                          Target:<span class=\"sport-card__param__value\">${trimText(\n                            target,\n                            5\n                          )}</span>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </li>`;\n}\n","import { createStorage } from \"../storageApi\";\nimport { createCardMarkup } from \"./createCardMarkup\";\nimport { FavoritesStorage } from \"./favoritesStorage\";\nimport { mockFavoritesData } from \"./mockData\";\nimport { Storage } from \"./storage\";\nimport { FAVORITES_PER_PAGE, FAVORITES_STORAGE_KEY } from \"./favoritesConfig\";\nimport Pagination from \"../pagination/pagination\";\n\nconst listRef = document.querySelector(\".js-favorites-list\");\nconst listRefDesktop = document.querySelector(\".js-favorites-list--desktop\");\nconst noCardsMessageRef = document.querySelector(\".js-favorites-no-cards\");\n\nconst paginationContainer = document.querySelector(\".js-pag\");\n\n//-------------------------------\nconst favoritesStorage = new FavoritesStorage(FAVORITES_STORAGE_KEY);\nconst pagination = new Pagination(paginationContainer, {\n  perPage: FAVORITES_PER_PAGE,\n});\nconst pageState = createPageState(1, updateData);\n\npagination.on(\"aftermove\", event => {\n  pageState.setPage(event.page);\n});\n\n// const myWorker = new Worker('./js/worker.js');\n\n// myWorker.postMessage('fav');\n\n// myWorker.onmessage = function (event) {\n//   console.log(event.data);\n//   if (event.data === 'update-favorites') {\n//     console.log('EXCELLENT!!');\n//   }\n// };\n\n// myWorker.postMessage(\"TEST FAV\")\n\n//TEMP----------------------\n// mockFavoritesData.forEach(card => {\n//   favoritesStorage.addCard(card);\n// });\n\n// const tempAddBtnRef = document.querySelector('.js-temp-add-to-favorites');\n// const tempPageIncrease = document.querySelector('.js-temp-page-up');\n// const tempPageDecrease = document.querySelector('.js-temp-page-down');\n\n// let tempCount = 1111;\n// tempAddBtnRef.addEventListener('click', e => {\n//   // const cardId = e.target.dataset.cardId;\n//   const card = {\n//     _id: tempCount++,\n//     burnedCalories: '312',\n//     time: '3',\n//     name: 'Test card19-new',\n//     bodyPart: 'Waist',\n//     target: 'Abs',\n//   };\n\n//   favoritesStorage.addCard(card);\n//   updateData();\n// });\n\n// tempPageIncrease.addEventListener('click', pageState.increase);\n// tempPageDecrease.addEventListener('click', pageState.decrease);\n//TEMP----------------------\n\n// listRef.addEventListener('click', e => {\n//   const delBtn = e.target.closest('.js-favorites-remove');\n//   if (!delBtn) return;\n\n//   const cardId = delBtn.dataset.cardId;\n//   favoritesStorage.removeCard(cardId);\n//   updateData();\n//   updateDesktopData();\n// });\n\n// listRefDesktop.addEventListener('click', e => {\n//   const delBtn = e.target.closest('.js-favorites-remove');\n//   if (!delBtn) return;\n\n//   const cardId = delBtn.dataset.cardId;\n//   favoritesStorage.removeCard(cardId);\n//   updateDesktopData();\n//   updateData();\n// });\n\nlistRef.addEventListener(\"click\", removeCardHandler);\nlistRefDesktop.addEventListener(\"click\", removeCardHandler);\n\nwindow.addEventListener(\"message\", e => {\n  // console.log(e.data);\n  // if (e.origin !== '*') return;\n\n  // console.log(e.data);\n  // if (e.data === 'add' || e.data === 'remove') {\n  //   console.log(e.data);\n  //   messageHandler(e.data);\n  // }\n\n  if (e.data === \"update-favorites\") {\n    // console.log(e.data);\n\n    updateData();\n    updateDesktopData();\n  }\n});\n\nupdateData();\nupdateDesktopData();\n///////////////////////////////////////////////////////////////////////////\n\n// function messageHandler({ method, payload }) {\n//   if (method === 'add') {\n//     favoritesStorage.addCard(payload);\n//     updateData();\n//     updateDesktopData();\n//   }\n\n//   if (method === 'remove') {\n//     favoritesStorage.removeCard(payload.id);\n//     updateData();\n//     updateDesktopData();\n//   }\n// }\n\nfunction removeCardHandler(e) {\n  const delBtn = e.target.closest(\".js-favorites-remove\");\n  if (!delBtn) return;\n\n  const cardId = delBtn.dataset.cardId;\n  favoritesStorage.removeCard(cardId);\n  updateData();\n  updateDesktopData();\n}\n\nfunction updateDesktopData() {\n  const data = favoritesStorage.getAllCards();\n  render(data, listRefDesktop);\n}\n\nfunction updateData() {\n  const response = favoritesStorage.getCards(pageState.getPage(), FAVORITES_PER_PAGE);\n\n  // console.log(response);\n\n  const { data, page, totalCount } = response;\n\n  render(data, listRef);\n\n  if ((data.length === 0) & (totalCount !== 0)) {\n    pageState.setPage(page - 1);\n    return;\n  }\n\n  pagination.updateTotalItems(response.totalCount);\n  pagination.goToPage(page);\n  pagination.render();\n}\n\nfunction render(list, containerRef) {\n  if (list.length === 0) {\n    noCardsMessageRef.classList.add(\"is-visible\");\n    containerRef.innerHTML = \"\";\n    return;\n  } else {\n    noCardsMessageRef.classList.remove(\"is-visible\");\n  }\n\n  const markup = list.map(createCardMarkup).join(\"\");\n  containerRef.innerHTML = markup;\n}\n\nfunction createPageState(initialPage, handler) {\n  const storage = new Storage(\"favorites_page\");\n\n  let page = storage.getFromStorage() || initialPage;\n\n  return {\n    increase() {\n      page++;\n      storage.setToStorage(page);\n      handler();\n    },\n\n    decrease() {\n      page--;\n      storage.setToStorage(page);\n      handler();\n    },\n\n    setPage(newPage) {\n      page = newPage;\n      storage.setToStorage(page);\n      handler();\n    },\n\n    getPage() {\n      return page;\n    },\n  };\n}\n\nwindow.matchMedia(\"(min-width: 1440px)\").addEventListener(\"change\", e => {\n  if (!e.matches) return;\n  pageState.setPage(1);\n});\n"],"names":["trimText","str","length","createCardMarkup","_id","burnedCalories","time","bodyPart","target","name","icons","listRef","listRefDesktop","noCardsMessageRef","paginationContainer","favoritesStorage","FavoritesStorage","FAVORITES_STORAGE_KEY","pagination","Pagination","FAVORITES_PER_PAGE","pageState","createPageState","updateData","event","removeCardHandler","e","updateDesktopData","delBtn","cardId","data","render","response","page","totalCount","list","containerRef","markup","initialPage","handler","storage","Storage","newPage"],"mappings":"+JAEA,MAAMA,EAAW,CAACC,EAAKC,IAAW,CAChC,GAAIA,GAAU,EAAG,MAAM,IAAI,MAAM,qCAAqC,EACtE,OAAID,EAAI,QAAUC,EAAS,EAAUD,EAC9BA,EAAI,MAAM,EAAGC,EAAS,CAAC,EAAI,KACpC,EAEO,SAASC,EAAiB,CAC/B,IAAAC,EACA,eAAAC,EACA,KAAAC,EACA,SAAAC,EACA,OAAAC,EACA,KAAAC,CACF,EAAG,CACD,MAAO,yEAAyEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAexCA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAKCM;AAAA;AAAA;AAAA;AAAA;AAAA,qHAK0EN;AAAA;AAAA;AAAA;AAAA,2CAI1EM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCASNA;AAAA;AAAA;AAAA,oDAGeV,EAASS,EAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAOtCJ,OAAoBL,EAC/CM,EAAK,SAAQ,EAAK,OAClB,CACJ;AAAA;AAAA;AAAA;AAAA;AAAA,+BAK+BN,EAASO,EAAU,CAAC;AAAA;AAAA;AAAA;AAAA,0EAIuBP,EAC9CQ,EACA,CAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOA,CC9EA,MAAMG,EAAU,SAAS,cAAc,oBAAoB,EACrDC,EAAiB,SAAS,cAAc,6BAA6B,EACrEC,EAAoB,SAAS,cAAc,wBAAwB,EAEnEC,EAAsB,SAAS,cAAc,SAAS,EAGtDC,EAAmB,IAAIC,EAAiBC,CAAqB,EAC7DC,EAAa,IAAIC,EAAWL,EAAqB,CACrD,QAASM,CACX,CAAC,EACKC,EAAYC,EAAgB,EAAGC,CAAU,EAE/CL,EAAW,GAAG,YAAaM,GAAS,CAClCH,EAAU,QAAQG,EAAM,IAAI,CAC9B,CAAC,EAgEDb,EAAQ,iBAAiB,QAASc,CAAiB,EACnDb,EAAe,iBAAiB,QAASa,CAAiB,EAE1D,OAAO,iBAAiB,UAAWC,GAAK,CAUlCA,EAAE,OAAS,qBAGbH,IACAI,IAEJ,CAAC,EAEDJ,IACAI,IAiBA,SAASF,EAAkBC,EAAG,CAC5B,MAAME,EAASF,EAAE,OAAO,QAAQ,sBAAsB,EACtD,GAAI,CAACE,EAAQ,OAEb,MAAMC,EAASD,EAAO,QAAQ,OAC9Bb,EAAiB,WAAWc,CAAM,EAClCN,IACAI,GACF,CAEA,SAASA,GAAoB,CAC3B,MAAMG,EAAOf,EAAiB,cAC9BgB,EAAOD,EAAMlB,CAAc,CAC7B,CAEA,SAASW,GAAa,CACpB,MAAMS,EAAWjB,EAAiB,SAASM,EAAU,QAAO,EAAID,CAAkB,EAI5E,CAAE,KAAAU,EAAM,KAAAG,EAAM,WAAAC,CAAU,EAAKF,EAInC,GAFAD,EAAOD,EAAMnB,CAAO,EAEfmB,EAAK,SAAW,EAAMI,IAAe,EAAI,CAC5Cb,EAAU,QAAQY,EAAO,CAAC,EAC1B,MACD,CAEDf,EAAW,iBAAiBc,EAAS,UAAU,EAC/Cd,EAAW,SAASe,CAAI,EACxBf,EAAW,OAAM,CACnB,CAEA,SAASa,EAAOI,EAAMC,EAAc,CAClC,GAAID,EAAK,SAAW,EAAG,CACrBtB,EAAkB,UAAU,IAAI,YAAY,EAC5CuB,EAAa,UAAY,GACzB,MACJ,MACIvB,EAAkB,UAAU,OAAO,YAAY,EAGjD,MAAMwB,EAASF,EAAK,IAAIhC,CAAgB,EAAE,KAAK,EAAE,EACjDiC,EAAa,UAAYC,CAC3B,CAEA,SAASf,EAAgBgB,EAAaC,EAAS,CAC7C,MAAMC,EAAU,IAAIC,EAAQ,gBAAgB,EAE5C,IAAIR,EAAOO,EAAQ,eAAc,GAAMF,EAEvC,MAAO,CACL,UAAW,CACTL,IACAO,EAAQ,aAAaP,CAAI,EACzBM,GACD,EAED,UAAW,CACTN,IACAO,EAAQ,aAAaP,CAAI,EACzBM,GACD,EAED,QAAQG,EAAS,CACfT,EAAOS,EACPF,EAAQ,aAAaP,CAAI,EACzBM,GACD,EAED,SAAU,CACR,OAAON,CACR,CACL,CACA,CAEA,OAAO,WAAW,qBAAqB,EAAE,iBAAiB,SAAUP,GAAK,CAClEA,EAAE,SACPL,EAAU,QAAQ,CAAC,CACrB,CAAC"}